<?php

namespace app\admin\controller;

use app\AdminController;
use app\common\model\Notice as NoticeM;
use support\Request;

class Notice extends AdminController
{
    /**
     * @var NoticeM
     */
    protected $model;

    public function __construct()
    {
        parent::__construct(); // TODO: Change the autogenerated stub
        $this->model = new NoticeM();
    }

    /**
     * 保存数据
     * Author: fudaoji<fdj@kuryun.cn>
     * @param Request $request
     * @param string $url
     * @param array $data
     * @return mixed|\support\Response
     */
    public function savePost(Request $request, $url = '', $data = []){
        if(request()->isPost()){
            $post_data = input('post.');
            try {
                $this->validate($post_data, 'Notice.' . (isset($post_data['id']) ? 'edit' : 'add'));
            }catch (\Exception $e){
                return $this->error($e->getMessage(), '', ['token' => token()]);
            }
            $post_data['publish_time'] = strtotime($post_data['publish_time']);
            return parent::savePost($request, $url, $post_data);
        }
    }

    /**
     * 系统公告
     * @return mixed
     * Author: fudaoji<fdj@kuryun.cn>
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\DbException
     * @throws \think\db\exception\ModelNotFoundException
     */
    public function index(){
        if(request()->isPost()){
            $post_data = input('post.');
            $where = [];
            !empty($post_data['search_key']) && $where[] = ['title', 'like', '%'.$post_data['search_key'].'%'];

            $query = $this->model->where($where);
            $total = $query->count();
            if ($total) {
                $list = $query->page($post_data['page'], $post_data['limit'])
                    ->order('id', 'desc')
                    ->select();
            } else {
                $list = [];
            }

            return $this->success('success', '', ['total' => $total, 'list' => $list]);
        }

        $builder = new ListBuilder();
        $builder->setSearch([
            ['type' => 'text', 'name' => 'search_key', 'title' => '搜索词','placeholder' => '标题']
        ])
            ->addTopButton('addnew')
            ->addTableColumn(['title' => 'ID', 'field' => 'id', 'minWidth' => 70])
            ->addTableColumn(['title' => '名称', 'field' => 'title', 'minWidth' => 150])
            ->addTableColumn(['title' => '发布时间', 'field' => 'publish_time', 'type' => 'datetime','minWidth' => 180])
            ->addTableColumn(['title' => '状态', 'field' => 'status', 'type' => 'switch', 'minWidth' => 80])
            ->addTableColumn(['title' => '创建时间', 'field' => 'create_time',  'minWidth' => 180])
            ->addTableColumn(['title' => '操作', 'minWidth' => 180, 'type' => 'toolbar'])
            ->addRightButton('edit')
            ->addRightButton('delete');
        return $builder->show();
    }

    /**
     * 发布系统公告
     * @return mixed
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function add(){
        $builder = new FormBuilder();
        $builder->setPostUrl(url('savePost'))
            ->addFormItem('title', 'text', '标题', '不超过50字', [], 'required maxlength=80')
            ->addFormItem('publish_time', 'datetime', '发布时间', '发布时间', [], 'required')
            ->addFormItem('content', 'ueditor', '内容', '内容', [], 'required');
        return $builder->show();
    }

    /**
     * 编辑系统公告
     * @return mixed
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function edit(){
        $data = $this->model->find(input('id', 0));
        if(empty($data)){
            return $this->error('数据不存在');
        }
        $data['publish_time'] = date('Y-m-d H:i:s', $data['publish_time']);
        $builder = new FormBuilder();
        $builder->setPostUrl(url('savePost'))
            ->addFormItem('id', 'hidden', 'id', 'id')
            ->addFormItem('title', 'text', '标题', '不超过50字', [], 'required maxlength=80')
            ->addFormItem('publish_time', 'datetime', '发布时间', '发布时间', [], 'required')
            ->addFormItem('status', 'radio', '状态', '状态', [1 => '正常', 0 => '禁用'], 'required')
            ->addFormItem('content', 'ueditor', '内容', '内容', [], 'required')
            ->setFormData($data);
        return $builder->show();
    }
}